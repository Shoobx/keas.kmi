#!/usr/bin/env bash
set -eux

GENERATED_ZOPE_CONF_FILE="zope.conf"
GENERATED_SERV_CONF_FILE="server.ini"
GENERATED_MARKER="generated by $(realpath ${0})"

# translate env vars to config
cat - > "${GENERATED_SERV_CONF_FILE}" <<CONFIG
# ${GENERATED_MARKER}
[app:main]
use = egg:keas.kmi
storage-dir=keys/

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 8080
worker_class = sync

# Logging Configuration
[loggers]
keys = root, kmi

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_kmi]
level = INFO
handlers = console
propagate = 0
qualname = kmi

[handler_console]
class = StreamHandler
args = (sys.stdout,)
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt= %Y-%m-%d %H:%M:%S

CONFIG

cat - > "zope.conf" <<ZOPE
# ${GENERATED_MARKER}
site-definition src/keas/kmi/application.zcml

<eventlog>
  # This sets up logging to both a file and to standard output
  # (STDOUT).  The "path" setting can be a relative or absolute
  # filesystem path or the tokens STDOUT or STDERR.

  <logfile>
    path STDOUT
    formatter zope.exceptions.log.Formatter
  </logfile>
</eventlog>
ZOPE

# resume entrypoint stuff
if [[ "${1:-}" == 'run' ]]; then
    gunicorn --paste "${GENERATED_SERV_CONF_FILE}"
else
    exec "$@"
fi
